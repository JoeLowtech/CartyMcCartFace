/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_MESSAGES_PB_H_INCLUDED
#define PB_MESSAGES_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
PB_PACKED_STRUCT_START
typedef struct _driveMessage {
    int32_t steering;
    float power;
} pb_packed driveMessage;
PB_PACKED_STRUCT_END


/* Initializer values for message structs */
#define driveMessage_init_default                {0, 0}
#define driveMessage_init_zero                   {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define driveMessage_steering_tag                1
#define driveMessage_power_tag                   2

/* Struct field encoding specification for nanopb */
#define driveMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    steering,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    power,             2)
#define driveMessage_CALLBACK NULL
#define driveMessage_DEFAULT NULL

extern const pb_msgdesc_t driveMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define driveMessage_fields &driveMessage_msg

/* Maximum encoded size of messages (where known) */
#define driveMessage_size                        16

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
